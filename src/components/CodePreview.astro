---
import { Code } from 'astro/components';
import { existsSync } from 'node:fs';
import { readFile } from '../helpers/files';

export interface Props {
  src?: string;
  content?: string;
  onlyBody?: boolean;
  lang?: string;
}

const { src, content, onlyBody, lang } = Astro.props;

const slotContent = await Astro.slots.render('default');

let code = '';

let extension = '';

if (src) {
  code = readFile(src);

  extension = existsSync(src) ? src?.split('.').pop() : 'plaintext';
}

if (onlyBody && code.includes('<body')) {
  const bodyContentPattern =
    /^[\s\S]*<body[^\>]*>\n([\s\S]*)\n\s*<\/body>[\s\S]*$/gim;

  const body = bodyContentPattern.exec(code)?.[1] ?? code;

  const indentationPattern = /^(\s*)</gim;

  const firstIndentation = indentationPattern.exec(body)?.[1] ?? '';

  code = body?.replace(new RegExp(`^${firstIndentation}`, 'gim'), '') ?? code;
}
---

<div class="dark-code-theme">
  <Code
    code={content ?? slotContent ?? code}
    lang={lang ?? extension}
    theme="github-dark"
  />
</div>
<div class="light-code-theme">
  <Code
    code={content ?? slotContent ?? code}
    lang={lang ?? extension}
    theme="github-light"
  />
</div>

<style is:global>
  .dark .light-code-theme {
    display: none;
  }

  html:not(.dark) .dark-code-theme {
    display: none;
  }
</style>
