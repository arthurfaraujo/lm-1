---
import type { Lang } from 'shiki';
import { Code } from 'astro/components';
import { readFileSync, existsSync } from 'node:fs';
import { resolve } from 'node:path';

export interface Props {
  src: string;
  onlyBody?: boolean;
}

const { src, onlyBody } = Astro.props;

const file = resolve('./public' + src);

let code = existsSync(file) ? readFileSync(file, 'utf8') : 'Code not found';

if (onlyBody && code.includes('<body')) {
  const bodyContentPattern =
    /^[\s\S]*<body[^\>]*>\n([\s\S]*)\n\s*<\/body>[\s\S]*$/gim;

  const body = bodyContentPattern.exec(code)?.[1] ?? code;

  const indentationPattern = /^(\s*)</gim;

  const firstIndentation = indentationPattern.exec(body)?.[1] ?? '';

  code = body?.replace(new RegExp(`^${firstIndentation}`, 'gim'), '') ?? code;
}

const lang = existsSync(file) ? src?.split('.').pop() : 'txt';
---

<Code code={code} lang={lang as Lang} />
